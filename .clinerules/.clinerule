# コミット

## コミットメッセージのテンプレート

`YYMMDD_HHMM [${TAG}] ${COMMIT_MESSAGE}`

## コミットメッセージの例

`231001_1200 [feat] ユーザ認証機能の追加`

## コミットメッセージのルール
- コミットメッセージは、以下の形式で記述すること。
  - `YYMMDD_HHMM [${TAG}] ${COMMIT_MESSAGE}`
- `YYMMDD_HHMM` は、コミットの日時を表す。
- `${TAG}` は、コミットの種類を表す。以下のタグを使用すること。
  - `Feature`: 新機能の追加（ファイル単位）
  - `Add`: 新しいファイルの追加
  - `Update`: 既存のファイルの更新
  - `Fix`: バグ修正
  - `Docs`: ドキュメントの変更
  - `Style`: スタイルの変更（コードのフォーマットなど）
  - `Refactor`: リファクタリング
  - `Test`: テストの追加や修正
  - `Chore`: その他の変更（ビルドプロセスや依存関係の更新など）
  - `Mod`: 過去に完成していたファイルを修正した場合など
  - `Remove`: ファイルの削除
  - `Rename`: ファイル名の変更
  - `Revert`: 以前のコミットを取り消す
  - `WIP`: 作業中のコミット 途中保存などにも用いる（Work In Progress）
- `${COMMIT_MESSAGE}` は、コミットの内容を簡潔に説明する。
- コミットメッセージは、日本語で数文字程度で記述すること。