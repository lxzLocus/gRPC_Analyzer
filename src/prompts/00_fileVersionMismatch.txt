# Template 5: Context Discrepancy Notification Prompt

## ⚠️ Context Warning: Discrepancy Between Provided Files and Expected State ##

The files you requested have been modified in this commit.
Due to my operational constraints, I can only provide file contents from the **pre-change state (`premerge` state)**.

There may be discrepancies between the latest `.proto` definitions you have and the file contents I'm about to provide.
Recognizing this contradiction, please analyze the provided older version file contents and appropriately update/execute your plan to reach the final goal (post-change state).

---

## Latest Proto File Definitions ##
{{protoFile}}

---

## Proto File Changes ##
{{protoFileChanges}}

---

## Files Changed in This Commit ##
{{fileChanges}}

---

## File You Requested ##
**Note**: The following file content is from the pre-change state

{{fileVersionMismatch}}

---

## Additional Context Files ##
{{suspectedFiles}}

---

## Your Next Action ##
Considering the above discrepancies, please determine your next action:

1. **Differential Analysis**: Identify differences between the latest proto definitions and the provided old file contents
2. **Inference-based Completion**: Reasonably infer the post-change state and clearly state your reasoning
3. **Modification Plan Development**: Plan the changes needed to transition from the old state to the new state
4. **Implementation Proposal**: Present specific code modification proposals to resolve the discrepancies

Leverage this constraint to maximize your differential reasoning capabilities.



---

## Your Task & Response Format ##
1.  **Analyze & Think**: Review the new information I've provided. Analyze how this impacts your original plan in a `%_Thought_%` section.
2.  **Update Plan (if necessary)**: If you need to revise your original plan, output the entire new plan in a `%_Plan_%` section. If no changes to the plan are needed, omit this tag.
3.  **Act**: Proceed with the next action according to your plan by using ONE of the following action tags: `%_Reply Required_%`, `%_Modified_%`, or `%%_Fin_%%`.
    **Guideline for `%_Modified_%`**: Before generating a patch, you MUST re-verify that all variables, functions, and types you use are defined or imported within the provided code context. If a definition is not found, request additional files.

// Expected response tags: %_Thought_%, and then either %_Reply Required_%, %_Modified_%, or %%_Fin_%%.

**IMPORTANT RULE: After you output a %_Modified_% tag, the system will apply it and show you the result. You MUST wait for this verification step. Output %%_Fin_%% only in a subsequent turn after you have verified that all your Correction Goals have been met.**

---
---
## Your Task & Response Format ##

**Phase 1: Analysis, Planning, and Initial Information Request**

%_Thought_%
[First, perform the "Differential Analysis" and "Inference-based Completion" tasks described above. Explain your findings and reasoning here. Based on that, outline your high-level strategy.]

%_Plan_%
[Based on your analysis, create a step-by-step plan to resolve the discrepancy, similar to your normal workflow.]

%_Correction_Goals_%
[Define the success criteria for resolving this version mismatch.]


## Response Structure Example ##

%_Thought_%
(Your analysis of the new information and its impact on your plan...)

%_Plan_%
(Your NEW plan, only if you decided to revise it.)

%_Reply Required_%
[
  {"type": "FILE_CONTENT", "path": "path/to/another_file.ext"}
]

// --- OR ---

%_Modified_%
--- path/to/file_to_modify.go
+++ path/to/file_to_modify.go
@@ ... @@
- old line
+ new line